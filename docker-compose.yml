version: "3"
services:
  laravel:
    container_name: Kalypso_LARAVEL 
    tty: true
    image: bitnami/laravel:7
    depends_on:
      - mysql
      - redis
      - web
    ports:
      - "8001:8001"
    networks:
       - Kalypso_network
    volumes:
      - ./backend/laravel:/app
    command: >
      bash -c " composer install
      && php artisan route:list
      && php artisan key:generate
      && php artisan migrate
      && php artisan db:seed
      && php artisan serve --host=0.0.0.0 --port=8001"
  mysql:
    container_name: Kalypso_MYSQL
    image: mysql:5.7
    ports:
      - "3306:3306"
    restart: on-failure
    networks:
       - Kalypso_network
    volumes:
      - mysqlBackup:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: kalypso
      MYSQL_USER: root
      MYSQL_PASSWORD: root

  web:
    image: golang:1.15
    container_name: go_container
    working_dir: /go/src/goKa 
    volumes:
      - ./backend/go:/go/src/goKa
    command: >
      bash -c " rm -f go.mod || true
      && rm -f go.sum || true
      && go mod init goKa
      && go get github.com/go-redis/redis/v8
      && go mod tidy
      && go get github.com/pilu/fresh
      && fresh "
    ports:
      - "8090:3000"
    labels:
      traefik.backend: "web"
      traefik.frontend.rule: "PathPrefix:/"
    depends_on:
      - mysql
      - redis
    networks:
      - Kalypso_network

  # angular:
  #   container_name: Kalypso_Angular
  #   build: ./frontend
  #   restart: on-failure
  #   ports:
  #     - "4200:4200"
  #   volumes:
  #     - ./frontend:/app
  #   depends_on:
  #     - mysql
  #     - redis
  #     - web

  redis:
    container_name: Kalypso_REDIS
    image: redis:alpine
    restart: on-failure
    ports:
      - "6379:6379"
    volumes:
      - "redis:/redis_data"
    networks:
      - Kalypso_network
    
  traefik:
    #image: traefik:1.7.2-alpine
    image: traefik:2.3
    container_name: traefik_container
    ports:
      - "80:80"
      - "8080:8080"
    networks:
       - Kalypso_network
    volumes:
       - /var/run/docker.sock:/var/run/docker.sock 
       - ./backend/go/traefik/traefik.yml:/etc/traefik/traefik.yml
  prometheus:
    image: prom/prometheus:v2.20.1
    container_name: prometheus_practica
    volumes:
      - ./prometheus/:/etc/prometheus
    ports:
      - "9090:9090"
    depends_on:
      - mysql
      - redis
      - web
    command: ["--config.file=/etc/prometheus/prometheus.yml"]
    networks:
     - Kalypso_network
  grafana:
    image: grafana/grafana:7.1.5
    container_name: grafana_practica
    environment:
      - GF_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_INSTALL_PLUGINS=grafana-clock-panel 1.0.1
    volumes:
      - myGrafanaVol:/var/lib/grafana
      - ./grafana/:/etc/grafana/provisioning/datasources/
    ports:
      - "3500:3000"
    depends_on:
     - prometheus
    links:
     - prometheus   
    networks:
     - Kalypso_network

volumes:
  redis:
  mysqlBackup:
  myGrafanaVol: {}
networks:
   Kalypso_network: 
