version: "3"
services:
  laravel:
    container_name: Kalypso_LARAVEL 
    tty: true
    image: bitnami/laravel:7
    depends_on:
      - mysql
      - redis
      - products
      - buys_products
      - users_Kalypso
    ports:
      - "8001:8001"
    networks:
       - Kalypso_network
    volumes:
      - ./backend/laravel:/app
    command: >
      bash -c " composer install
      && php artisan route:list
      && php artisan key:generate
      && php artisan migrate
      && php artisan db:seed
      && php artisan serve --host=0.0.0.0 --port=8001"
  mysql:
    container_name: Kalypso_MYSQL
    image: mysql:5.7
    ports:
      - "3306:3306"
    restart: on-failure
    networks:
       - Kalypso_network
    volumes:
      - mysqlBackup:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: kalypso
      MYSQL_USER: root
      MYSQL_PASSWORD: root

  users_Kalypso:
      extends:
          file: microservices_common.yml
          service: all_microservicesGo
      container_name: Kalypso_Go_usersMicro
      volumes:
        - ./backend/go/users:/go/src/goApp
      ports:
        - "3002:3002"
      depends_on:
        - mysql
        - redis
      networks:
        - Kalypso_network

  products:
    extends:
          file: microservices_common.yml
          service: all_microservicesGo
    container_name: Kalypso_Go_ProductsMicro
    volumes:
      - ./backend/go/products:/go/src/goApp
    ports:
      - "3000:3000"
    depends_on:
      - mysql
      - redis
      - users_Kalypso
    networks:
      - Kalypso_network


  buys_products:
    extends:
          file: microservices_common.yml
          service: all_microservicesGo
    container_name: Kalypso_Go_buys_productsMicro
    volumes:
      - ./backend/go/buy_products:/go/src/goApp
    ports:
      - "3001:3001"
    depends_on:
      - mysql
      - redis
      - users_Kalypso
      - products
    networks:
      - Kalypso_network

  redis:
    container_name: Kalypso_REDIS
    image: redis:alpine
    restart: on-failure
    ports:
      - "6379:6379"
    volumes:
      - "redis:/redis_data"
    networks:
      - Kalypso_network
    
   
  traefik:
    image: traefik:2.3
    container_name: traefik_container
    ports:
      - "80:80"
      - "8080:8080"
    networks:
       - Kalypso_network
    volumes:
       - /var/run/docker.sock:/var/run/docker.sock 
       - ./utils/traefik/traefik.yml:/etc/traefik/traefik.yml 
    command: 
        - "--api.dashboard=true"
        - "--api.insecure=true"
        - "--providers.docker"
        - "--entrypoints.web.address=:80"
        - "--metrics.prometheus=true"
        - "--metrics.prometheus.buckets=0.1, 0.3, 1.2, 5.0"
    depends_on:
      - products

  prometheus:
    image: prom/prometheus:v2.20.1
    container_name: prometheus_Kalypso
    volumes:
      - ./utils/prometheus/:/etc/prometheus/
    ports:
      - "9090:9090"
    depends_on:
      - mysql
      - traefik
      - redis
      - products
      - buys_products
      - users_Kalypso
    command: ["--config.file=/etc/prometheus/prometheus.yml"]
    labels:
      - "traefik.docker.network=traefik"
      - "traefik.backend=prometheus"
      - "traefik.frontend.rule=Host:prometheus.localhost"
      - "traefik.port=9090"
    networks:
     - Kalypso_network

  grafana:
    image: grafana/grafana:7.1.5
    container_name: grafana_Kalypso
    environment:
      - GF_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_INSTALL_PLUGINS=grafana-clock-panel 1.0.1
    volumes:
      - myGrafanaVol:/var/lib/grafana
      - ./utils/grafana/:/etc/grafana/provisioning/datasources/
    ports:
      - "3500:3000"
    depends_on:
     - prometheus
     - products
    networks:
     - Kalypso_network

volumes:
  redis:
  mysqlBackup:
  myGrafanaVol: {}
networks:
   Kalypso_network: 
